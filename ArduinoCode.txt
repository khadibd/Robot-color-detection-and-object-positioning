// Motor A
int motor1Pin1 = 27;
int motor1Pin2 = 26;
int enable1Pin = 14;
int m = 1;  // Initialize m to 1

// Motor B
int motor2Pin1 = 25;
int motor2Pin2 = 33;
int enable2Pin = 32;

// LED Pins
int redLEDPin = 12;
int greenLEDPin = 13;
int blueLEDPin = 22;


// Setting PWM properties
const int freq = 30000;
const int pwmChannelA = 0;
const int pwmChannelB = 1;
const int resolution = 8;
int dutyCycle = 145;

void setup() {
  Serial.begin(115200);

  // Set motor pins as outputs
  pinMode(motor1Pin1, OUTPUT);
  pinMode(motor1Pin2, OUTPUT);
  pinMode(enable1Pin, OUTPUT);

  pinMode(motor2Pin1, OUTPUT);
  pinMode(motor2Pin2, OUTPUT);
  pinMode(enable2Pin, OUTPUT);

  // Set LED pins as outputs
  pinMode(redLEDPin, OUTPUT);
  pinMode(greenLEDPin, OUTPUT);
  pinMode(blueLEDPin, OUTPUT);

  // Configure LED PWM functionalities
  ledcSetup(pwmChannelA, freq, resolution);
  ledcSetup(pwmChannelB, freq, resolution);

  // Attach the channels to the GPIO to be controlled
  ledcAttachPin(enable1Pin, pwmChannelA);
  ledcAttachPin(enable2Pin, pwmChannelB);

  // Turn off all LEDs and stop all motors initially
  stopAll();
  turnOffAllLEDs();
}

void loop() {
  

  moveForward();
  delay(2000);
  digitalWrite(greenLEDPin, HIGH);
  stopAll(); // Stop the motors when an obstacle is detected
    delay(5000); // Wait for a short period
  digitalWrite(greenLEDPin, LOW);
  //digitalWrite(redLEDPin, HIGH); // Turn on Red LED
 /* turnLeft();
  delay(1000);
  moveForward();
  delay(1500);
   
 
    digitalWrite(blueLEDPin, HIGH);
    delay(50);
    digitalWrite(blueLEDPin, LOW);
    turnRight();
    delay(1000); // Give time for the robot to turn
    moveForward();
    delay(1500);
    digitalWrite(greenLEDPin, HIGH);
    
    stopAll(); // Stop the motors when an obstacle is detected
    delay(5000); // Wait for a short period
    digitalWrite(greenLEDPin, LOW);
   turnLeft();
  delay(1000);
   moveForward();
    delay(2000);
  digitalWrite(blueLEDPin, HIGH);
    delay(50);
    digitalWrite(blueLEDPin, LOW);*/
}

void turnLeft() {
  Serial.println("Turning Left");
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, HIGH);
  ledcWrite(pwmChannelA, dutyCycle);

  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, LOW);
  ledcWrite(pwmChannelB, dutyCycle);
}

void moveForward() {
  Serial.println("Moving Forward");
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, HIGH);
  ledcWrite(pwmChannelA, dutyCycle);

  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, HIGH);
  ledcWrite(pwmChannelB, dutyCycle);
}

void turnRight() {
  Serial.println("Turning Right");
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, LOW);
  ledcWrite(pwmChannelA, dutyCycle);

  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, HIGH);
  ledcWrite(pwmChannelB, dutyCycle);
}

void stopAll() {
  Serial.println("Stopping All Motors");
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, LOW);
  ledcWrite(pwmChannelA, 0);

  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, LOW);
  ledcWrite(pwmChannelB, 0);
}

void turnOffAllLEDs() {
  digitalWrite(redLEDPin, LOW);
  digitalWrite(greenLEDPin, LOW);
  digitalWrite(blueLEDPin, LOW);
}